@model HockeyAppCrashReport.Models.HockeyAppCrashReportLogic.CrashSearch

@{
    ViewBag.Title = "CrashSearch Results";
}


<form action="/CrashReport/CrashSearch" method="get">
    <div class="form-inline">
        <br />

        @Html.DropDownListFor(model => model.crashProperty, new List<SelectListItem>
                        {
                        new SelectListItem {Value="app_id", Text="App ID"},
                        new SelectListItem {Value="crash_reason_id", Text="Crash Reason ID"},
                        new SelectListItem {Value="created_at", Text="Created At"},
                        new SelectListItem {Value="updated_at", Text="Updated At"},
                        new SelectListItem {Value="oem", Text="OEM"},
                        new SelectListItem {Value="model", Text="Model"},
                        new SelectListItem {Value="os_version", Text="OS Version"},
                        new SelectListItem {Value="jail_break", Text="Jail Break"},
                        new SelectListItem {Value="contact_string", Text="Contact String"},
                        new SelectListItem {Value="user_string", Text="User String"},
                        new SelectListItem {Value="has_log", Text="Has Log"},
                        new SelectListItem {Value="has_description", Text="Has Description"},
                        new SelectListItem {Value="app_version_id", Text="App Version ID"},
                        new SelectListItem {Value="bundle_version", Text="Bundle Version"},
                        new SelectListItem {Value="bundle_short_version", Text="Bundle Short Version"}

                        }, "Select One", new { @class = "btn btn-default dropdown-toggle", @required = "required" })


        @*<select class="form-control form-horizontal" onchange="OptionSelected();" id="crashProperty" name="crashProperty" required>
            <option value="">Select</option>
            <option value="app_id">App ID</option>
            <option value="crash_reason_id">Crash Reason ID</option>
            <option value="created_at">Created At</option>
            <option value="updated_at">Updated At</option>
            <option value="oem">OEM</option>
            <option value="model">Model</option>
            <option value="os_version">OS Version</option>
            <option value="jail_break">Jail Break</option>
            <option value="contact_string">Contact String</option>
            <option value="user_string">User String</option>
            <option value="has_log">Has Log</option>
            <option value="has_description">Has Description</option>
            <option value="app_version_id">App Version ID</option>
            <option value="bundle_version">Bundle Version</option>
            <option value="bundle_short_version">Bundle Short Version</option>
        </select>*@
        @Html.EditorFor(model => model.querytxt, new { htmlAttributes = new { @type = "text", @class = "active form-control form-horizontal", @required = "required" } })
        <button type="submit" value="Search" id="Search"
                class="btn btn-success btn-group-lg glyphicon glyphicon-search form-horizontal">
            Search
        </button>
    </div>
</form>


<script>
    function PrevPage() {
        var currentPage = $("#current_page").val();
        debugger;
        var PrevPage = Number(currentPage) - 1;
        $("#current_page").val(PrevPage);
    };
    function NextPage() {
        var currentPage = $("#current_page").val();
        debugger;
        var NextPage = Number(currentPage) + 1;
        $("#current_page").val(NextPage);
    };
</script>


<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.current_page)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.per_page)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.total_entries)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.total_pages)
        </th>
        <th></th>
        <th>To page No/Per Page</th>
    </tr>
    <tr>
        @using (Html.BeginForm("CrashSearch", "CrashReport", FormMethod.Get))
        {
            <td>
                @if (Model.current_page > 1)
                {
                    <button value="Prev" type="submit" onclick="PrevPage();" class="btn btn-success glyphicon glyphicon-backward"> Prev</button>
                }
            </td>
            <td>
                @Html.DisplayFor(model => model.status)
            </td>
            <td>
                @Html.DisplayFor(model => model.current_page)
            </td>
            <td>
                @Html.DisplayFor(model => model.per_page)
            </td>
            <td>
                @Html.DisplayFor(model => model.total_entries)
            </td>
            <td>
                @Html.DisplayFor(model => model.total_pages)
            </td>
            <td>
                @if (Model.current_page < Model.total_pages)
                {
                    <button value="Next" onclick="NextPage();" type="submit" class="btn btn-success glyphicon glyphicon-forward"> Next</button>
                }
            </td>

            <td class="hidden">
                @Html.EditorFor(model => model.current_page, new { htmlAttributes = new { @type = "number", @min = "1", @max = Model.total_pages, @value = "0" } })
                /
                @Html.EditorFor(model => model.per_page, new { htmlAttributes = new { @type = "number", @min = "25", @max = "100", @step = "25", @value = "0" } })
                <button type="submit" class="btn btn-success glyphicon glyphicon-check"> Go</button>
            </td>
            <td class="hidden">
                <br />

                @Html.DropDownListFor(model => model.crashProperty, new List<SelectListItem>
                        {
                        new SelectListItem {Value="app_id", Text="App ID"},
                        new SelectListItem {Value="crash_reason_id", Text="Crash Reason ID"},
                        new SelectListItem {Value="created_at", Text="Created At"},
                        new SelectListItem {Value="updated_at", Text="Updated At"},
                        new SelectListItem {Value="oem", Text="OEM"},
                        new SelectListItem {Value="model", Text="Model"},
                        new SelectListItem {Value="os_version", Text="OS Version"},
                        new SelectListItem {Value="jail_break", Text="Jail Break"},
                        new SelectListItem {Value="contact_string", Text="Contact String"},
                        new SelectListItem {Value="user_string", Text="User String"},
                        new SelectListItem {Value="has_log", Text="Has Log"},
                        new SelectListItem {Value="has_description", Text="Has Description"},
                        new SelectListItem {Value="app_version_id", Text="App Version ID"},
                        new SelectListItem {Value="bundle_version", Text="Bundle Version"},
                        new SelectListItem {Value="bundle_short_version", Text="Bundle Short Version"}

                        }, "Select One", new { @class = "btn btn-default dropdown-toggle", @required = "required" })

                @Html.EditorFor(model => model.querytxt, new { htmlAttributes = new { @type = "text", @class = "active form-control form-horizontal", @required = "required" } })
            </td>
        }

        @using (Html.BeginForm("CrashSearch", "CrashReport", FormMethod.Get))
        {
            if (Model.total_entries > 25)
            {
                <td>
                    @Html.EditorFor(model => model.current_page, new { htmlAttributes = new { @type = "number", @min = "1", @max = Model.total_pages, @value = "0" } })
                    /
                    @Html.EditorFor(model => model.per_page, new { htmlAttributes = new { @type = "number", @min = "25", @max = "100", @step = "25", @value = "0" } })
                    <button type="submit" class="btn btn-success glyphicon glyphicon-check"> Go</button>
                </td>
                <td class="hidden">
                    <br />

                    @Html.DropDownListFor(model => model.crashProperty, new List<SelectListItem>
                        {
                        new SelectListItem {Value="app_id", Text="App ID"},
                        new SelectListItem {Value="crash_reason_id", Text="Crash Reason ID"},
                        new SelectListItem {Value="created_at", Text="Created At"},
                        new SelectListItem {Value="updated_at", Text="Updated At"},
                        new SelectListItem {Value="oem", Text="OEM"},
                        new SelectListItem {Value="model", Text="Model"},
                        new SelectListItem {Value="os_version", Text="OS Version"},
                        new SelectListItem {Value="jail_break", Text="Jail Break"},
                        new SelectListItem {Value="contact_string", Text="Contact String"},
                        new SelectListItem {Value="user_string", Text="User String"},
                        new SelectListItem {Value="has_log", Text="Has Log"},
                        new SelectListItem {Value="has_description", Text="Has Description"},
                        new SelectListItem {Value="app_version_id", Text="App Version ID"},
                        new SelectListItem {Value="bundle_version", Text="Bundle Version"},
                        new SelectListItem {Value="bundle_short_version", Text="Bundle Short Version"}

                        }, "Select One", new { @class = "btn btn-default dropdown-toggle", @required = "required" })

                    @Html.EditorFor(model => model.querytxt, new { htmlAttributes = new { @type = "text", @class = "active form-control form-horizontal", @required = "required" } })
                </td>
            }
        }
    </tr>
</table>


<table id="tblCrashes" class="table table-bordered table-hover table-striped " cellspacing="0" role="grid" width="100%">
    <tr>
        <th>Index</th>
        <td>
            @Html.DisplayName("app_id")
        </td>
        <td>
            @Html.DisplayName("crash_reason_id")
        </td>
        <td>
            @Html.DisplayName("created_at")
        </td>
        <td>
            @Html.DisplayName("updated_at")
        </td>
        <td>
            @Html.DisplayName("oem ")
        </td>
        <td>
            @Html.DisplayName("model ")
        </td>
        <td>
            @Html.DisplayName("os_version ")
        </td>
        <td>
            @Html.DisplayName("jail_break ")
        </td>
        <td>
            @Html.DisplayName("contact_string ")
        </td>
        <td>
            @Html.DisplayName("user_string ")
        </td>
        <td>
            @Html.DisplayName("has_log ")
        </td>
        <td>
            @Html.DisplayName("has_description ")
        </td>
        <td>
            @Html.DisplayName("app_version_id ")
        </td>
        <td>
            @Html.DisplayName("bundle_version ")
        </td>
        <td>
            @Html.DisplayName("bundle_short_version ")
        </td>
        <td></td>
    </tr>

    @if (Model.crashes != null)
    {
        int index = 1;
        foreach (var item in Model.crashes)
        {
            <tr>
                <td>@(index++)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.app_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.crash_reason_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.created_at)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.updated_at)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.oem)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.os_version)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.jail_break)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.contact_string)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.user_string)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.has_log)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.has_description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.app_version_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bundle_version)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bundle_short_version)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.crash_reason_id }) |*@
                    @Html.ActionLink("Details", "Details", new { id = item.crash_reason_id })
                    @*@Html.ActionLink("Delete", "Delete", new { id = item.crash_reason_id })*@
                </td>
            </tr>
        }
    }
</table>


<p>
    @Html.ActionLink("Back to List", "Index")
</p>